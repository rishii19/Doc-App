@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,600;1,800;1,900&display=swap');

:root {
  --background:#F7F9FF;
  --f_button:#172578;
  --type1_background:#DCE1F9;
}
*{
  font-family: 'Rubik', sans-serif;
  padding: 0px;
  margin: 0px;
  box-sizing: border-box;
}
button.outlined{
  border-radius: 28px;
  font-size: 13px;
  font-weight: 500;
  border-width: 1px;
  color: var(--f_button);
  padding:10px;
  cursor: pointer;
  background-color: white;
  border-color: var(--f_button);
  transition: all ease-in-out 0.1s;
}
button.outlined:focus{
  box-shadow: 0px 0px 1px 1px #17267862;
  outline: 2px dotted var(--f_button);
}
button.outlined:hover{
  background-color: var(--f_button);
  color: white;
}
button.filled{
  border-radius: 28px;
  font-size: 13px;
  font-weight: 500;
  border-width: 1px;
  color: white;
  padding:10px;
  cursor: pointer;
  background-color: var(--f_button);
  border-color: var(--f_button);
  transition: all ease-in-out 0.1s;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  align-content: center;
}
button.filled:focus{
  box-shadow: 0px 0px 1px 1px #17267862;
  outline: 2px dotted var(--f_button);
}
button.type1{
  border-radius: 28px;
  font-size: 13px;
  font-weight: 500;
  border-width: 1px;
  color: var(--f_button);
  padding:10px;
  outline: none;
  cursor: pointer;
  background-color: var(--type1_background);
  border-color: var(--type1_background);
  transition: all ease-in-out 0.1s;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  align-content: center;
  border: 1px;
}
button.type1:focus{
  box-shadow: 0px 0px 2px 1px #17267862;
  outline: 1px dotted black;
}
input.outline_def{
  padding: 5px;
  outline: none;
  font-size: 17px;
  padding-left: 20px;
  border-color: rgba(0, 0, 0, 0.089);
  border-radius:20px;
  height: 40px;
}
input.outline_def:focus{
  border-color:var(--f_button);
}
input.outline_def.error{
  border-color: red;
}
input.outline_def.error::after{
  content: 'Invalid';
}